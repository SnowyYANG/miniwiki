-- $Id$

CREATE TABLE pages (
  name varchar(100) NOT NULL default '',
  revision int(11) NOT NULL default '0',
  content text,
  last_modified timestamp(14) NOT NULL,
  message varchar(250) default NULL,
  user varchar(100) default NULL,
  PRIMARY KEY  (name,revision)
);

INSERT INTO pages VALUES ('User:admin',1,'Admin\'s password is \'\'admin\'\'. Change it as soon as possible, please.',20050416143620,'miniWiki default','admin');
INSERT INTO pages VALUES ('MainPage',1,'Welcome to \'\'\'miniWiki\'\'\', simple Wiki written in [http://www.php.net PHP] which uses [http://www.mysql.com MySQL] as its storage.\r\n\r\nLogin as [[User:admin|admin]] if you want to edit pages.\r\n\r\n* [[User\'s Guide]]\r\n* [[Special:Users|List of All Users]]\r\n* [[Special:Pages|List of All Pages]]\r\n* [[Special:Uploads|List of All Uploads]]\r\n','20050821215033','','admin');
INSERT INTO pages VALUES ('User\'s Guide',1,'== Wiki Concept ==\r\n\r\n[http://en.wikipedia.org/wiki/Wiki Wiki] is composed of pages which are written in special Wiki markup (rendered as HTML when viewed). These page may be interlinked. Each page consists of set of revisions, latest revision called HEAD. Page update adds new revision.\r\n\r\n== Interface ==\r\n\r\nInterface is composed of header, body and footer. Header shows page name (possibly with current action description):\r\n\r\n<pre>\r\nEditing User\'s Guide\r\n</pre>\r\n\r\nThere may also be some information text (like \"Page updated\", \"Login invalid\") below page name.\r\n\r\nFooter looks like this:\r\n\r\n<pre>\r\nMainPage | Logged as admin | Revision: HEAD | View Source | 2005/04/16 13:20:40 | View | Edit | Delete | History\r\n</pre>\r\n\r\n* \'\'\'MainPage\'\'\' always points to the HEAD revision of main page (may be changed by editing MW_PAGE_NAME_MAIN define in miniwiki.php)\r\n* \'\'\'Logged as admin\'\'\' or \'\'\'Login\'\'\' executes login action (see below for more information)\r\n* \'\'\'Revision: HEAD\'\'\' shows current page\'s revision (if applicable)\r\n* \'\'\'View Source\'\'\' or \'\'\'View\'\'\' toggles between viewing rendered page (with current revision) and its source\r\n* \'\'\'2005/04/16 13:20:40\'\'\' is modification time of current page (with current revision) or current time for special pages\r\n* \'\'\'View\'\'\' points to the HEAD revision of current page\r\n* \'\'\'Edit\'\'\' points to the editor of HEAD revision of current page\r\n* \'\'\'Delete\'\'\' deletes current page and all its revisions (\'\'there is no undelete!\'\')\r\n* \'\'\'History\'\'\'  shows list of revisions of current page\r\n\r\nSome actions may be disabled (not clickable) if current user does not have necessary rights. Some actions may be missing if they are not meaningful (like View Source on history page).\r\n\r\nViewing page which does not exist opens page editor.\r\n\r\n== Login Process ==\r\n\r\nHTTP Basic Auth is used for login. When user is already logged in, it is possible to log out by cancelling login action (works only in browsers which throw credentials away if login process is cancelled).\r\n\r\n== User Rights ==\r\n\r\nEveryone can view everything, only logged user can edit and delete pages and only [[User:admin|administrator]] can create and delete users. Logged user can change its own password, admin can change passwords of all users.\r\n\r\nBy changing settings in \'\'userdefs.php\'\' anonymous users may be switched off and non-admins may not be allowed to edit pages.\r\n\r\n== Page Editing ==\r\n\r\nPage names may be arbitrary, but are case sensitive (even names of special and user pages).\r\n\r\n=== Wiki Markup ===\r\n\r\nWiki source is divided into blocks separated by blank lines. Block can be: normal, heading, list or horizontal rule. In addition text surrounded by <pre>, </pre> (each starts on its own line) is not rendered as Wiki markup and is shown as-is inside HTML <pre>...</pre> with escaped HTML-problematic characters.\r\n\r\n==== Normal Block ====\r\n\r\nNormal blocks are rendered as paragraph (<p>...</p>). Block content is inline processed.\r\n\r\nInline processing replaces \'\'\'strong text\'\'\', \'\'emphasized text\'\', [[MainPage]] (internal link),\r\n[[MainPage|internal link with overridden title]],\r\n[[#List_Block|link to heading block in current page]],\r\n[[User\'s Guide#List_Block|link to heading block in specific page]],\r\n[[User\'s Guide$1|link to specific version]],\r\n[http://php.net] (external link),\r\n[http://php.net external link with overridden title] and line<br>break.\r\n\r\nSource:\r\n\r\n<pre>\r\nInline processing replaces \'\'\'strong text\'\'\', \'\'emphasized text\'\', [[MainPage]] (internal link),\r\n[[MainPage|internal link with overridden title]],\r\n[[#List_Block|link to heading block in current page]],\r\n[[User\'s Guide#List_Block|link to heading block in specific page]],\r\n[[User\'s Guide$1|link to specific version]],\r\n[http://php.net] (external link),\r\n[http://php.net external link with overridden title] and line<br>break.\r\n</pre>\r\n\r\n==== Heading Block ====\r\n\r\nHeading block is heading title surrounded with series of \"=\" which indicates heading level and is rendered as <h?>...</h?>. Heading title is inline processed. Heading level 1 should not be used, because it is used for page name in header.\r\n\r\nHeading example:\r\n\r\n===== Heading level 5 =====\r\n\r\nSource:\r\n\r\n<pre>\r\n===== Heading level 5 =====\r\n</pre>\r\n\r\n==== List Block ====\r\n\r\nList block consists of list items. Each list item starts with series of \"*\" and ends before another list item or with end of block. Items may span multiple lines and are inline processed. Number of \"*\" indicates list item level. List block is rendered as <ul>...</ul>, list item as <li>...</li>. Nested lists are possible (list items may have arbitrary level).\r\n\r\nList block example:\r\n\r\n* item 1\r\n* item 1\r\n** item 2\r\ncontinues on next line\r\n*** item 3\r\n** item 2\r\n* item 1\r\n\r\nSource:\r\n\r\n<pre>\r\n* item 1\r\n* item 1\r\n** item 2\r\ncontinues on next line\r\n*** item 3\r\n** item 2\r\n* item 1\r\n</pre>\r\n\r\n==== Horizontal Rule Block ====\r\n\r\nHorizontal rule block must consist of exactly three dashes:\r\n\r\n<pre>\r\n---\r\n</pre>\r\n\r\nAnd is rendered as:\r\n\r\n---\r\n\r\n==== Directives ====\r\n\r\nDirectives start on new line and look like:\r\n\r\n<pre>\r\n#NAME PARAMETER\r\n</pre>\r\n\r\nThere is no space between number sign and name. If there is space, whole line is considered comment and is left out from output.\r\n\r\n===== #TITLE =====\r\n\r\nDirective #TITLE changes title of current page:\r\n\r\n<pre>\r\n #TITLE New Title\r\n</pre>\r\n\r\n===== #NOTOC =====\r\n\r\nDirective #NOTOC disables [[#Table_of_Contents|TOC]] generation.\r\n\r\n==== Simple forms support ====\r\n\r\nSyntax is simple:\r\n\r\n<pre>\r\n  <form METHOD URL>\r\n    <form-field NAME TYPE PARAMETER>\r\n    ...\r\n  </form>\r\n</pre>\r\n\r\n* \'\'\'METHOD\'\'\' is either \'\'get\'\' or \'\'post\'\'\r\n* \'\'\'URL\'\'\' is action URL\r\n* \'\'\'NAME\'\'\' is either form field name or \'\'#\'\' for empty name\r\n* \'\'\'TYPE\'\'\' is one of \'\'text\'\' (text input line), \'\'option\'\' (selection), \'\'submit\'\' (submit button) or \'\'hidden\'\' (hidden text field)\r\n* \'\'\'PARAMETER\'\'\' for types other than option it is the value of the field, for option it is a series of values delimited by \'|\' - value may contain visible text delimited from real value by \':\', value prefixed with \'~\' is selected by default\r\n\r\nForms are processed as inline markup.\r\n\r\nExample with search on [http://freshmeat.net freshmeat.net]:\r\n\r\n<pre>\r\n  <form get http://freshmeat.net/search/>\r\n    <form-field q text>\r\n    <form-field # submit Freshmeat Search>\r\n  </form>\r\n</pre>\r\n\r\nShows like this:\r\n\r\n<form get http://freshmeat.net/search/>\r\n  <form-field q text>\r\n  <form-field # submit Freshmeat Search>\r\n</form>\r\n\r\n==== Page Inclusion ====\r\n\r\nPage inclusion is supported with this syntax:\r\n\r\n<pre>\r\n{{PAGE}}\r\n</pre>\r\n\r\nExample of [[MainPage]] inclusion (horizontal rules were added by this page, not by inclusion mechanism):\r\n\r\n---\r\n\r\n{{MainPage}}\r\n\r\n---\r\n\r\n==== Wiki Functions ====\r\n\r\nSpecial functions defined in lib/functions.php may be called with:\r\n\r\n<pre>\r\n{{&FUNCTION PARAMETER}}\r\n</pre>\r\n\r\nOne function called \'\'user_info\'\' is provided which loads and renders Wiki markup stored in a file \'\'users/CURRENT_USER_NAME\'\' (loacation is configurable in lib/settings.php).\r\n\r\nWiki functions are inline processed.\r\n\r\n==== Wiki Variables ====\r\n\r\nCurrently one Wiki variable may be shown and that is:\r\n\r\n<pre>\r\n{{$user}}\r\n</pre>\r\n\r\nExample: {{$user}}.\r\n\r\nWiki variables are inline processed.\r\n\r\n==== Table of Contents ====\r\n\r\nOn top of each page, table of contents is generated from all headings (unless switched off with [[#Directives|directive #NOTOC]]).\r\n\r\n=== Editor ===\r\n\r\nEditor consists of toolbar on top, textarea with page source in the middle and edit message text field and \"Preview\" and \"Update Page\" buttons at the bottom.\r\n\r\nNo changes are done unless \"Update Page\" button is activated. Edit message is not mandatory.\r\n\r\nToolbar works only if JavaScript is enabled. When toolbar button is activated, some text is added at current cursor position and cursor is placed to edit spot. Buttons from left to right (refer to Wiki Markup chapter for more information):\r\n\r\n* strong text (access key \"b\")\r\n* emphasized text (access key \"i\")\r\n* heading level 1 (access key \"h\")\r\n* heading level 2\r\n* heading level 3\r\n* heading level 4\r\n* heading level 5\r\n* heading level 6\r\n* internal link (access key \"w\")\r\n* external link (access key \"e\")\r\n* list item (access key \"l\")\r\n* preformatted block (access key \"p\")\r\n\r\nWhat access key really means depends on web browser (e.g. Mozilla Firefox exposes it as shortcut Alt-key).\r\n\r\n== Special Pages ==\r\n\r\nThere are several special pages (with prefix \"Special:\") which are dynamically created and so called user pages (with prefix \"User:\") which have mixed content.\r\n\r\n=== Special:Pages ===\r\n\r\n[[Special:Pages]] provides list of all stored pages (including user pages with content).\r\n\r\n=== Special:Users ===\r\n\r\n[[Special:Users]] provides list of all users where each name leads to associated user page.\r\n\r\nIf current user has enough privileges it can create new users and delete existing ones. Deleting user does not delete its user page.\r\n\r\nCreated user has disabled login until its password is changed from its user page.\r\n\r\n=== User Page ===\r\n\r\nUser page (like [[User:admin]]) is editable page with user information. It always exists, but may have no content. Associated user may not exist.\r\n\r\nIf current user has enough privileges it can change associated user\'s password.\r\n\r\n=== Special:Uploads ===\r\n\r\n[[Special:Uploads]] provides list of all uploaded files and also a mean to upload new ones. Name of uploaded files\r\nlead to associated upload page.\r\n\r\nUnlike other Wikis, miniWiki stores uploaded files in a database not in a filesystem.\r\n\r\n=== Upload Page ===\r\n\r\nUpload page (name starts with \"Upload:\") represents one uploaded file. Edit link allows to upload new version of a file.\r\n\r\n=== Upload Data Page ===\r\n\r\nUpload data page (name starts with \"Data:\") is not a real page, it returns raw content of an uploaded file.\r\n\r\n=== Upload Image Page === \r\n\r\nUpload image page (name starts with \"Image:\") is not a real page, when linked uploaded file is shown inlined as an image.\r\n','20050821220126','','admin');

CREATE TABLE users (
  name varchar(100) NOT NULL default '',
  password varchar(32) default NULL,
  PRIMARY KEY  (name)
);

CREATE TABLE uploads (
  name varchar(100) NOT NULL default '',
  revision int(11) NOT NULL default '0',
  content mediumblob,
  last_modified timestamp(14) NOT NULL,
  message varchar(250) default NULL,
  user varchar(100) default NULL,
  PRIMARY KEY  (name,revision)
);

INSERT INTO users VALUES ('admin','21232f297a57a5a743894a0e4a801fc3');
